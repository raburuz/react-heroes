{"version":3,"sources":["auth/AuthContext.js","types/types.js","components/login/LoginScreen.js","components/ui/Navbar.js","data/heroes.js","components/heroes/HeroeItem.js","components/heroes/HeroeList.js","selectors/getHeroesByPublisher.js","components/marvel/MarvelScreen.js","components/heroes/HeroesScreen.js","selectors/getHeroesById.js","components/dc/DcScreen.js","components/search/SearchScreen.js","hooks/useForm.js","selectors/getHeroesByName.js","routers/DashboardRoutes.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","auth/authReducer.js","HeroesApp.js","index.js"],"names":["AuthContext","createContext","types","LoginScreen","history","dispatch","useContext","className","onClick","lastPath","localStorage","getItem","console","log","type","payload","name","replace","Navbar","useHistory","user","to","activeClassName","exact","logged","heroes","id","superhero","publisher","alter_ego","first_appearance","characters","HeroeItem","style","maxWidth","maxHeight","src","alt","HeroeList","useMemo","includes","Error","filter","hero","getHeroesByPublisher","map","MarvelScreen","marvel","HeroesScreen","heroeId","useParams","find","getHeroesById","length","push","goBack","DcScreen","dc","SearchScreen","location","useLocation","queryString","parse","search","q","initialState","useState","values","setValues","target","value","useForm","handleInputChange","heroesFiltered","toLowerCase","onSubmit","e","preventDefault","placeholder","autoComplete","onChange","DashboardRoutes","path","component","PrivateRoute","isAuthenticated","Component","rest","pathname","setItem","props","PublicRoute","AppRouter","authReducer","state","action","HeroesApp","useReducer","JSON","useEffect","stringify","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLAEaA,EAAcC,0BCFdC,EACA,eADAA,EAEC,gB,OCEDC,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAChBC,EAAaC,qBAAWN,GAAxBK,SAiBR,OACM,sBAAKE,UAAU,iBAAf,UACM,uCACA,uBACA,wBAAQA,UAAU,kBAAkBC,QAnB5B,WAGd,IAAMC,EAAWC,aAAaC,QAAQ,aAAe,IACrDC,QAAQC,IAAIJ,GAQZJ,EANe,CACTS,KAAMZ,EACNa,QAAS,CACHC,KAAM,UAIlBZ,EAAQa,QAAQR,IAMV,uBCrBLS,EAAS,WAChB,IAAMd,EAAUe,cAChB,EAA2Bb,qBAAWN,GAA9BoB,EAAR,EAAQA,KAAMf,EAAd,EAAcA,SACNW,EAASI,EAATJ,KAYR,OACM,sBAAKT,UAAU,mDAAf,UACM,cAAC,IAAD,CAAMA,UAAU,iBAAiBc,GAAG,IAApC,0BAIA,qBAAKd,UAAU,kBAAf,SACM,sBAAKA,UAAU,aAAf,UACM,cAAC,IAAD,CACMe,gBAAgB,SAChBf,UAAU,oBACVgB,OAAK,EACLF,GAAG,UAJT,oBASA,cAAC,IAAD,CACMC,gBAAgB,SAChBf,UAAU,oBACVgB,OAAK,EACLF,GAAG,MAJT,gBAQA,cAAC,IAAD,CACMC,gBAAgB,SAChBf,UAAU,oBACVgB,OAAK,EACLF,GAAG,UAJT,yBAWZ,qBAAKd,UAAU,wDAAf,SACM,qBAAIA,UAAU,qBAAd,UACM,sBAAMA,UAAU,8BAAhB,SACOS,IAEP,wBACMT,UAAU,wBACVC,QArDT,WAOfH,EANe,CACTS,KAAMZ,EACNa,QAAS,CACHS,QAAQ,KAIpBpB,EAAQa,QAAQ,WA2CE,6B,OC7DjBQ,EAAS,CAChB,CACMC,GAAI,YACJC,UAAW,SACXC,UAAW,YACXC,UAAW,cACXC,iBAAkB,uBAClBC,WAAY,eAElB,CACML,GAAI,cACJC,UAAW,WACXC,UAAW,YACXC,UAAW,SACXC,iBAAkB,mBAClBC,WAAY,UAElB,CACML,GAAI,WACJC,UAAW,QACXC,UAAW,YACXC,UAAW,cACXC,iBAAkB,kBAClBC,WAAY,oDAElB,CACML,GAAI,WACJC,UAAW,gBACXC,UAAW,YACXC,UAAW,aACXC,iBAAkB,0BAClBC,WACM,6FAEZ,CACML,GAAI,WACJC,UAAW,cACXC,UAAW,YACXC,UAAW,eACXC,iBAAkB,sBAClBC,WAAY,gBAElB,CACML,GAAI,YACJC,UAAW,eACXC,UAAW,YACXC,UAAW,iBACXC,iBAAkB,qBAClBC,WAAY,kBAElB,CACML,GAAI,aACJC,UAAW,oBACXC,UAAW,YACXC,UAAW,eACXC,iBAAkB,wBAClBC,WAAY,qBAElB,CACML,GAAI,WACJC,UAAW,kBACXC,UAAW,YACXC,UAAW,eACXC,iBAAkB,uBAClBC,WAAY,gBAElB,CACML,GAAI,UACJC,UAAW,cACXC,UAAW,YACXC,UAAW,aACXC,iBAAkB,wBAClBC,WAAY,qCAElB,CACML,GAAI,WACJC,UAAW,eACXC,UAAW,YACXC,UAAW,cACXC,iBAAkB,mBAClBC,WAAY,4BAElB,CACML,GAAI,gBACJC,UAAW,aACXC,UAAW,gBACXC,UAAW,eACXC,iBAAkB,sBAClBC,WAAY,gBAElB,CACML,GAAI,iBACJC,UAAW,kBACXC,UAAW,gBACXC,UAAW,eACXC,iBAAkB,4BAClBC,WAAY,gBAElB,CACML,GAAI,cACJC,UAAW,WACXC,UAAW,gBACXC,UAAW,aACXC,iBAAkB,wBAClBC,WAAY,cAElB,CACML,GAAI,cACJC,UAAW,OACXC,UAAW,gBACXC,UAAW,eACXC,iBAAkB,0BAClBC,WAAY,gBAElB,CACML,GAAI,cACJC,UAAW,OACXC,UAAW,gBACXC,UAAW,eACXC,iBAAkB,yBAClBC,WAAY,gBAElB,CACML,GAAI,mBACJC,UAAW,YACXC,UAAW,gBACXC,UAAW,gBACXC,iBAAkB,2BAClBC,WAAY,iBAElB,CACML,GAAI,mBACJC,UAAW,YACXC,UAAW,gBACXC,UAAW,0BACXC,iBAAkB,eAClBC,WAAY,2BAElB,CACML,GAAI,iBACJC,UAAW,UACXC,UAAW,gBACXC,UAAW,yBACXC,iBAAkB,wBAClBC,WAAY,0BAElB,CACML,GAAI,iBACJC,UAAW,UACXC,UAAW,gBACXC,UAAW,gBACXC,iBAAkB,WAClBC,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","file":"static/js/main.ec65a518.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const AuthContext = createContext();\n","export const types = {\n      login: '[auth] login',\n      logout: '[auth] logout',\n};\n","import React, { useContext } from 'react';\nimport { AuthContext } from '../../auth/AuthContext';\nimport { types } from '../../types/types';\n\nexport const LoginScreen = ({ history }) => {\n      const { dispatch } = useContext(AuthContext);\n\n      const handleLogin = () => {\n            // history.push('/');\n\n            const lastPath = localStorage.getItem('lastPath') || '/';\n            console.log(lastPath);\n\n            const action = {\n                  type: types.login,\n                  payload: {\n                        name: 'Jean',\n                  },\n            };\n            dispatch(action);\n            history.replace(lastPath);\n      };\n      return (\n            <div className=\"container mt-5\">\n                  <h1>Login</h1>\n                  <hr />\n                  <button className=\"btn btn-primary\" onClick={handleLogin}>\n                        Login\n                  </button>\n            </div>\n      );\n};\n","import React, { useContext } from 'react';\nimport { Link, NavLink, useHistory } from 'react-router-dom';\nimport { AuthContext } from '../../auth/AuthContext';\nimport { types } from '../../types/types';\n\nexport const Navbar = () => {\n      const history = useHistory();\n      const { user, dispatch } = useContext(AuthContext);\n      const { name } = user;\n\n      const handleLogout = () => {\n            const action = {\n                  type: types.logout,\n                  payload: {\n                        logged: false,\n                  },\n            };\n            dispatch(action);\n            history.replace('/login');\n      };\n      return (\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark px-5\">\n                  <Link className=\"navbar-brand  \" to=\"/\">\n                        Asociaciones\n                  </Link>\n\n                  <div className=\"navbar-collapse\">\n                        <div className=\"navbar-nav\">\n                              <NavLink\n                                    activeClassName=\"active\"\n                                    className=\"nav-item nav-link\"\n                                    exact\n                                    to=\"/marvel\"\n                              >\n                                    Marvel\n                              </NavLink>\n\n                              <NavLink\n                                    activeClassName=\"active\"\n                                    className=\"nav-item nav-link\"\n                                    exact\n                                    to=\"/dc\"\n                              >\n                                    DC\n                              </NavLink>\n                              <NavLink\n                                    activeClassName=\"active\"\n                                    className=\"nav-item nav-link\"\n                                    exact\n                                    to=\"/search\"\n                              >\n                                    Search\n                              </NavLink>\n                        </div>\n                  </div>\n\n                  <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\n                        <ul className=\"navbar-nav ml-auto\">\n                              <span className=\"nav-item nav-link text-info\">\n                                    {name}\n                              </span>\n                              <button\n                                    className=\"nav-item nav-link btn\"\n                                    onClick={handleLogout}\n                              >\n                                    Logout\n                              </button>\n                        </ul>\n                  </div>\n            </nav>\n      );\n};\n","export const heroes = [\n      {\n            id: 'dc-batman',\n            superhero: 'Batman',\n            publisher: 'DC Comics',\n            alter_ego: 'Bruce Wayne',\n            first_appearance: 'Detective Comics #27',\n            characters: 'Bruce Wayne',\n      },\n      {\n            id: 'dc-superman',\n            superhero: 'Superman',\n            publisher: 'DC Comics',\n            alter_ego: 'Kal-El',\n            first_appearance: 'Action Comics #1',\n            characters: 'Kal-El',\n      },\n      {\n            id: 'dc-flash',\n            superhero: 'Flash',\n            publisher: 'DC Comics',\n            alter_ego: 'Jay Garrick',\n            first_appearance: 'Flash Comics #1',\n            characters: 'Jay Garrick, Barry Allen, Wally West, Bart Allen',\n      },\n      {\n            id: 'dc-green',\n            superhero: 'Green Lantern',\n            publisher: 'DC Comics',\n            alter_ego: 'Alan Scott',\n            first_appearance: 'All-American Comics #16',\n            characters:\n                  'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz',\n      },\n      {\n            id: 'dc-arrow',\n            superhero: 'Green Arrow',\n            publisher: 'DC Comics',\n            alter_ego: 'Oliver Queen',\n            first_appearance: 'More Fun Comics #73',\n            characters: 'Oliver Queen',\n      },\n      {\n            id: 'dc-wonder',\n            superhero: 'Wonder Woman',\n            publisher: 'DC Comics',\n            alter_ego: 'Princess Diana',\n            first_appearance: 'All Star Comics #8',\n            characters: 'Princess Diana',\n      },\n      {\n            id: 'dc-martian',\n            superhero: 'Martian Manhunter',\n            publisher: 'DC Comics',\n            alter_ego: \"J'onn J'onzz\",\n            first_appearance: 'Detective Comics #225',\n            characters: 'Martian Manhunter',\n      },\n      {\n            id: 'dc-robin',\n            superhero: 'Robin/Nightwing',\n            publisher: 'DC Comics',\n            alter_ego: 'Dick Grayson',\n            first_appearance: 'Detective Comics #38',\n            characters: 'Dick Grayson',\n      },\n      {\n            id: 'dc-blue',\n            superhero: 'Blue Beetle',\n            publisher: 'DC Comics',\n            alter_ego: 'Dan Garret',\n            first_appearance: 'Mystery Men Comics #1',\n            characters: 'Dan Garret, Ted Kord, Jaime Reyes',\n      },\n      {\n            id: 'dc-black',\n            superhero: 'Black Canary',\n            publisher: 'DC Comics',\n            alter_ego: 'Dinah Drake',\n            first_appearance: 'Flash Comics #86',\n            characters: 'Dinah Drake, Dinah Lance',\n      },\n      {\n            id: 'marvel-spider',\n            superhero: 'Spider Man',\n            publisher: 'Marvel Comics',\n            alter_ego: 'Peter Parker',\n            first_appearance: 'Amazing Fantasy #15',\n            characters: 'Peter Parker',\n      },\n      {\n            id: 'marvel-captain',\n            superhero: 'Captain America',\n            publisher: 'Marvel Comics',\n            alter_ego: 'Steve Rogers',\n            first_appearance: 'Captain America Comics #1',\n            characters: 'Steve Rogers',\n      },\n      {\n            id: 'marvel-iron',\n            superhero: 'Iron Man',\n            publisher: 'Marvel Comics',\n            alter_ego: 'Tony Stark',\n            first_appearance: 'Tales of Suspense #39',\n            characters: 'Tony Stark',\n      },\n      {\n            id: 'marvel-thor',\n            superhero: 'Thor',\n            publisher: 'Marvel Comics',\n            alter_ego: 'Thor Odinson',\n            first_appearance: 'Journey into Myster #83',\n            characters: 'Thor Odinson',\n      },\n      {\n            id: 'marvel-hulk',\n            superhero: 'Hulk',\n            publisher: 'Marvel Comics',\n            alter_ego: 'Bruce Banner',\n            first_appearance: 'The Incredible Hulk #1',\n            characters: 'Bruce Banner',\n      },\n      {\n            id: 'marvel-wolverine',\n            superhero: 'Wolverine',\n            publisher: 'Marvel Comics',\n            alter_ego: 'James Howlett',\n            first_appearance: 'The Incredible Hulk #180',\n            characters: 'James Howlett',\n      },\n      {\n            id: 'marvel-daredevil',\n            superhero: 'Daredevil',\n            publisher: 'Marvel Comics',\n            alter_ego: 'Matthew Michael Murdock',\n            first_appearance: 'Daredevil #1',\n            characters: 'Matthew Michael Murdock',\n      },\n      {\n            id: 'marvel-hawkeye',\n            superhero: 'Hawkeye',\n            publisher: 'Marvel Comics',\n            alter_ego: 'Clinton Francis Barton',\n            first_appearance: 'Tales of Suspense #57',\n            characters: 'Clinton Francis Barton',\n      },\n      {\n            id: 'marvel-cyclops',\n            superhero: 'Cyclops',\n            publisher: 'Marvel Comics',\n            alter_ego: 'Scott Summers',\n            first_appearance: 'X-Men #1',\n            characters: 'Scott Summers',\n      },\n      {\n            id: 'marvel-silver',\n            superhero: 'Silver Surfer',\n            publisher: 'Marvel Comics',\n            alter_ego: 'Norrin Radd',\n            first_appearance: 'The Fantastic Four #48',\n            characters: 'Norrin Radd',\n      },\n];\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const HeroeItem = ({\n      id,\n      superhero,\n      publisher,\n      alter_ego,\n      first_appearance,\n      characters,\n}) => {\n      return (\n            <div\n                  className=\"card h-100 ms-3 text-white bg-dark mb-3\"\n                  style={{ maxWidth: 360, maxHeight: 1090 }}\n            >\n                  <div className=\"card-header\">\n                        <span>{publisher}</span>\n                  </div>\n                  <img\n                        className=\"card-img \"\n                        src={`/assets/heroes/${id}.jpg`}\n                        alt={`imagen de ${superhero}`}\n                  ></img>\n                  <div className=\"card-body\">\n                        <h5 className=\"card-title\">{superhero}</h5>\n                        <hr />\n                        <h6 className=\"card-text\">Character:</h6>\n                        <p>{characters}</p>\n                        <h6 className=\"card-text\">Alter Ego:</h6>\n                        <p>{alter_ego}</p>\n\n                        <h6 className=\"card-text\">First Appearance:</h6>\n                        <p className=\"text-muted\">{first_appearance}</p>\n                        <Link\n                              className=\"btn btn-primary m-auto\"\n                              to={`./hero/${id}`}\n                        >\n                              More...\n                        </Link>\n                  </div>\n            </div>\n      );\n};\n","import React, { useMemo } from 'react';\nimport { getHeroesByPublisher } from '../../selectors/getHeroesByPublisher';\nimport { HeroeItem } from './HeroeItem';\n\nexport const HeroeList = ({ publisher }) => {\n      const heroes = useMemo(\n            () => getHeroesByPublisher(publisher),\n            [publisher]\n      );\n\n      return (\n            <div className=\"row row-cols-1 row-cols-md-3 g-4 animate__animated animate__fadeIn\">\n                  {heroes.map((hero) => (\n                        <HeroeItem key={hero.id} {...hero} />\n                  ))}\n            </div>\n      );\n};\n","import { heroes } from '../data/heroes';\n\nexport const getHeroesByPublisher = (publisher) => {\n      const validatorsPublishers = ['Marvel Comics', 'DC Comics'];\n\n      if (!validatorsPublishers.includes(publisher)) {\n            throw new Error(\n                  `Publisher ${publisher} no encontrado en nuestra data`\n            );\n      }\n\n      return heroes.filter((hero) => hero.publisher === publisher);\n};\n","import React from 'react';\nimport { HeroeList } from '../heroes/HeroeList';\n\nexport const MarvelScreen = () => {\n      const marvel = 'Marvel Comics';\n      return (\n            <div>\n                  <h2 className=\"mt-2 text-white\">{marvel}</h2>\n                  <hr />\n                  <HeroeList publisher={marvel} />\n            </div>\n      );\n};\n","import React, { useMemo } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { getHeroesById } from '../../selectors/getHeroesById';\n\nexport const HeroesScreen = ({ history }) => {\n      const { heroeId } = useParams();\n      const hero = useMemo(() => getHeroesById(heroeId), [heroeId]);\n\n      if (!hero) {\n            return <Redirect to=\"/\" />;\n      }\n      const {\n            id,\n            superhero,\n            publisher,\n            alter_ego,\n            first_appearance,\n            characters,\n      } = hero;\n\n      const handleReturn = () => {\n            history.length <= 2 ? history.push('/') : history.goBack();\n      };\n\n      return (\n            <div className=\"container mt-4 animate__animated animate__fadeIn\">\n                  <div className=\"row\">\n                        <div className=\"col-4\">\n                              <img\n                                    className=\"img-thumbnail animate__animated animate__fadeInLeft\"\n                                    src={`/assets/heroes/${id}.jpg`}\n                                    alt={`Imagen de ${superhero}`}\n                              />\n                        </div>\n                        <div className=\"col-8 text-white\">\n                              <h3>{publisher}</h3>\n                              <hr />\n                              <div>\n                                    <h2>{superhero}</h2>\n                                    <h6 className=\"card-text\">Character:</h6>\n                                    <p>{characters}</p>\n                                    <h6 className=\"card-text\">Alter Ego:</h6>\n                                    <p>{alter_ego}</p>\n\n                                    <h6 className=\"card-text\">\n                                          First Appearance:\n                                    </h6>\n                                    <p>{first_appearance}</p>\n                                    <button\n                                          className=\"btn btn-outline-info\"\n                                          onClick={handleReturn}\n                                    >\n                                          Return...\n                                    </button>\n                              </div>\n                        </div>\n                  </div>\n            </div>\n      );\n};\n","import { heroes } from '../data/heroes';\n\nexport const getHeroesById = (id) => {\n      return heroes.find((hero) => hero.id === id);\n};\n","import React from 'react';\nimport { HeroeList } from '../heroes/HeroeList';\n\nexport const DcScreen = () => {\n      const dc = 'DC Comics';\n      return (\n            <div>\n                  <h2 className=\"mt-2 text-white\">{dc}</h2>\n                  <hr />\n                  <HeroeList publisher={dc} />\n            </div>\n      );\n};\n","import React, { useMemo } from 'react';\nimport queryString from 'query-string';\n\nimport { useLocation } from 'react-router-dom';\nimport { useForm } from '../../hooks/useForm';\nimport { HeroeItem } from '../heroes/HeroeItem';\nimport { getHeroesByName } from '../../selectors/getHeroesByName';\n\nexport const SearchScreen = ({ history }) => {\n      const location = useLocation();\n      const { q = '' } = queryString.parse(location.search);\n\n      const [{ search }, handleInputChange] = useForm({\n            search: q,\n      });\n\n      const heroesFiltered = useMemo(() => getHeroesByName(q), [q]);\n\n      const handleSubmit = (e) => {\n            e.preventDefault();\n            history.push(`?q=${search}`);\n      };\n\n      return (\n            <div>\n                  <h1>Search Form</h1>\n                  <hr />\n                  <div className=\"row\">\n                        <div className=\"col-5\">\n                              <form onSubmit={handleSubmit}>\n                                    <input\n                                          type=\"text\"\n                                          name=\"search\"\n                                          placeholder=\"Find your hero\"\n                                          className=\"form-control\"\n                                          value={search}\n                                          autoComplete=\"off\"\n                                          onChange={handleInputChange}\n                                    />\n                                    <button\n                                          type=\"submit\"\n                                          className=\"btn btn-outline-info mt-2\"\n                                    >\n                                          Search\n                                    </button>\n                              </form>\n                        </div>\n                        <div className=\"col-7 text-white\">\n                              <h4>Results...</h4>\n                              <hr />\n\n                              {q === '' && (\n                                    <div className=\"alert alert-info\">\n                                          Search a hero\n                                    </div>\n                              )}\n\n                              {q !== '' && heroesFiltered.length === 0 && (\n                                    <div className=\"alert alert-danger\">\n                                          There is no a hero with {q}\n                                    </div>\n                              )}\n                              {heroesFiltered.map((hero) => (\n                                    <HeroeItem key={hero.id} {...hero} />\n                              ))}\n                        </div>\n                  </div>\n            </div>\n      );\n};\n","import { useState } from 'react';\n\nexport const useForm = (initialState = {}) => {\n      const [values, setValues] = useState(initialState);\n\n      const reset = () => {\n            setValues(initialState);\n      };\n\n      const handleInputChange = ({ target }) => {\n            setValues({\n                  ...values,\n                  [target.name]: target.value,\n            });\n      };\n\n      return [values, handleInputChange, reset];\n};\n","import { heroes } from '../data/heroes';\n\nexport const getHeroesByName = (name) => {\n      if (name === '') {\n            return [];\n      }\n      name = name.toLowerCase();\n      return heroes.filter((hero) =>\n            hero.superhero.toLowerCase().includes(name)\n      );\n};\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { Navbar } from '../components/ui/Navbar';\nimport { MarvelScreen } from '../components/marvel/MarvelScreen';\nimport { HeroesScreen } from '../components/heroes/HeroesScreen';\nimport { DcScreen } from '../components/dc/DcScreen';\nimport { SearchScreen } from '../components/search/SearchScreen';\n\nexport const DashboardRoutes = () => {\n      return (\n            <>\n                  <Navbar />\n\n                  <div className=\"container\">\n                        <Switch>\n                              <Route\n                                    exact\n                                    path=\"/marvel\"\n                                    component={MarvelScreen}\n                              />\n                              <Route\n                                    exact\n                                    path=\"/hero/:heroeId\"\n                                    component={HeroesScreen}\n                              />\n                              <Route exact path=\"/dc\" component={DcScreen} />\n                              <Route\n                                    exact\n                                    path=\"/search\"\n                                    component={SearchScreen}\n                              />\n                              <Redirect to=\"/marvel\" />\n                        </Switch>\n                  </div>\n            </>\n      );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom';\n\nexport const PrivateRoute = ({\n      isAuthenticated,\n      component: Component,\n      ...rest\n}) => {\n      const path = rest.location.pathname;\n      localStorage.setItem('lastPath', path);\n\n      return (\n            <Route\n                  {...rest}\n                  //Las props me devuelve el estado anterior\n                  component={(props) =>\n                        isAuthenticated ? (\n                              <Component {...props} />\n                        ) : (\n                              <Redirect to=\"/login\" />\n                        )\n                  }\n            />\n      );\n};\n\nPrivateRoute.propTypes = {\n      isAuthenticated: PropTypes.bool.isRequired,\n      component: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom';\n\nexport const PublicRoute = ({\n      isAuthenticated,\n      component: Component,\n      ...rest\n}) => {\n      return (\n            <Route\n                  {...rest}\n                  //Las props me devuelve el estado anterior\n                  component={(props) =>\n                        !isAuthenticated ? (\n                              <Component {...props} />\n                        ) : (\n                              <Redirect to=\"/\" />\n                        )\n                  }\n            />\n      );\n};\n\nPublicRoute.propTypes = {\n      isAuthenticated: PropTypes.bool.isRequired,\n      component: PropTypes.func.isRequired,\n};\n","import React, { useContext } from 'react';\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\nimport { AuthContext } from '../auth/AuthContext';\nimport { LoginScreen } from '../components/login/LoginScreen';\nimport { DashboardRoutes } from './DashboardRoutes';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\nexport const AppRouter = () => {\n      const { user } = useContext(AuthContext);\n      return (\n            <Router>\n                  <div>\n                        <Switch>\n                              <PublicRoute\n                                    exact\n                                    path=\"/login\"\n                                    component={LoginScreen}\n                                    isAuthenticated={user.logged}\n                              />\n                              <PrivateRoute\n                                    path=\"/\"\n                                    component={DashboardRoutes}\n                                    isAuthenticated={user.logged}\n                              />\n                        </Switch>\n                  </div>\n            </Router>\n      );\n};\n","import { types } from '../types/types';\n\nexport const authReducer = (state = {}, action) => {\n      switch (action?.type) {\n            case types.login:\n                  return {\n                        ...action.payload,\n                        logged: true,\n                  };\n            case types.logout:\n                  return {\n                        logged: false,\n                  };\n            default:\n                  return state;\n      }\n};\n","import React, { useEffect, useReducer } from 'react';\nimport { AppRouter } from './routers/AppRouter';\nimport './HeroesApp.css';\nimport { AuthContext } from './auth/AuthContext';\nimport { authReducer } from './auth/authReducer';\n\nexport const HeroesApp = () => {\n      const init = () => {\n            return (\n                  JSON.parse(localStorage.getItem('user')) || { logged: false }\n            );\n      };\n\n      const [user, dispatch] = useReducer(authReducer, {}, init);\n\n      useEffect(() => {\n            localStorage.setItem('user', JSON.stringify(user));\n      }, [user]);\n\n      return (\n            <AuthContext.Provider value={{ user, dispatch }}>\n                  <AppRouter />\n            </AuthContext.Provider>\n      );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HeroesApp } from './HeroesApp';\n\nReactDOM.render(\n      <React.StrictMode>\n            <HeroesApp />\n      </React.StrictMode>,\n      document.getElementById('root')\n);\n"],"sourceRoot":""}